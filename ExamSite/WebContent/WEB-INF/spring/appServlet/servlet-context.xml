<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Specify a package to search for controllers -->
	<context:component-scan base-package="com.sridhana" />


	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/onlineexam" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="root" />
	</beans:bean>


	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.sridhana.model.User</beans:value>
				<beans:value>com.sridhana.model.Clas</beans:value>
				<beans:value>com.sridhana.model.ClassMap</beans:value>
				<beans:value>com.sridhana.model.Course</beans:value>
				<beans:value>com.sridhana.model.Exam_Details</beans:value>
				<beans:value>com.sridhana.model.Exam_Grades</beans:value>
				<beans:value>com.sridhana.model.Student_MCQ_Answers</beans:value>
				<beans:value>com.sridhana.model.Mcq</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hbm2ddl.auto">update</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>


	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="adminController"
		class="com.sridhana.controller.admin.AdminController">
		<beans:property name="assignClassService" ref="assignClassService" />
		<beans:property name="manageClassService" ref="manageClassService" />
		<beans:property name="manageCourseService" ref="manageCourseService" />
		<beans:property name="manageStudentService" ref="manageStudentService" />
		<beans:property name="manageFacultyService" ref="manageFacultyService" />
	</beans:bean>


	<beans:bean id="studentController"
		class="com.sridhana.controller.student.StudentController">
		<beans:property name="studentService" ref="studentService" />
	</beans:bean>
	
	<beans:bean id="manageMCQService"
		class="com.sridhana.service.faculty.ManageMCQService">
		<beans:property name="mcqDAO" ref="mcqDAO" />
	</beans:bean>
	<beans:bean id="facultyController"
		class="com.sridhana.controller.faculty.FacultyController">
		<beans:property name="facultyService" ref="facultyService" />
	</beans:bean>
	

	<beans:bean id="facultyService"
		class="com.sridhana.service.faculty.FacultyService">
		<beans:property name="exam_DetailsDAO" ref="exam_DetailsDAO" />
		<beans:property name="exam_GradesDAO" ref="exam_GradesDAO" />
		<beans:property name="classDAO" ref="classDAO" />		
	</beans:bean>


	<beans:bean class="com.sridhana.service.student.StudentService"
		id="studentService">

		<beans:property name="classMapDAO" ref="classMapDAO" />

	</beans:bean>

	<!-- declarations for all DAO classes -->

	<beans:bean id="userDAO" class="com.sridhana.DAO.UserDAO">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="mcqDAO" class="com.sridhana.DAO.McqDAO">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="classDAO" class="com.sridhana.DAO.ClassDAO">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="classMapDAO" class="com.sridhana.DAO.ClassMapDAO">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="courseDAO" class="com.sridhana.DAO.CourseDAO">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="exam_DetailsDAO" class="com.sridhana.DAO.Exam_DetailsDAO">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="exam_GradesDAO" class="com.sridhana.DAO.Exam_GradesDAO">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="student_MCQ_AnswersDAO" class="com.sridhana.DAO.Student_MCQ_AnswersDAO">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<!-- declarations for all DAO classes -->


	<beans:bean id="assignClassService"
		class="com.sridhana.service.admin.AssignClassService">
		<beans:property name="classMapDAO" ref="classMapDAO" />
	</beans:bean>

	<beans:bean id="manageClassService"
		class="com.sridhana.service.admin.ManageClassService">
		<beans:property name="classDAO" ref="classDAO" />
	</beans:bean>

	<beans:bean id="manageCourseService"
		class="com.sridhana.service.admin.ManageCourseService">
		<beans:property name="courseDAO" ref="courseDAO" />
	</beans:bean>

	<beans:bean id="manageStudentService"
		class="com.sridhana.service.admin.ManageStudentService">
		<beans:property name="userDAO" ref="userDAO" />
	</beans:bean>

	<beans:bean id="manageFacultyService"
		class="com.sridhana.service.admin.ManageFacultyService">
		<beans:property name="userDAO" ref="userDAO" />
		
	</beans:bean>



	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- setting maximum upload size -->
		<beans:property name="maxUploadSize" value="10000000" />
	</beans:bean>

</beans:beans>